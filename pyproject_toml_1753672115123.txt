[build-system]
requires = ["setuptools>=68.0", "wheel>=0.40.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ymera-enterprise"
version = "4.0.0"
description = "YMERA Enterprise Agent Learning Integration System - Production-Ready Multi-Agent Platform"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "YMERA Development Team", email = "dev@ymera.enterprise"},
]
maintainers = [
    {name = "YMERA Platform Team", email = "platform@ymera.enterprise"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
keywords = [
    "agents", "multi-agent", "learning", "enterprise", "distributed",
    "collaboration", "knowledge-graph", "pattern-recognition", "automation"
]
requires-python = ">=3.11"

# Core Dependencies
dependencies = [
    # FastAPI and Web Framework
    "fastapi>=0.104.0,<0.105.0",
    "uvicorn[standard]>=0.24.0,<0.25.0",
    "gunicorn>=21.2.0,<22.0.0",
    "httpx>=0.25.0,<0.26.0",
    
    # Database and ORM
    "sqlalchemy[asyncio]>=2.0.23,<2.1.0",
    "alembic>=1.12.1,<1.13.0",
    "asyncpg>=0.29.0,<0.30.0",
    "redis>=5.0.1,<5.1.0",
    "aioredis>=2.0.1,<2.1.0",
    
    # Data Processing and Validation
    "pydantic>=2.5.0,<2.6.0",
    "pydantic-settings>=2.1.0,<2.2.0",
    "pandas>=2.1.3,<2.2.0",
    "numpy>=1.25.2,<1.26.0",
    "scikit-learn>=1.3.2,<1.4.0",
    
    # Logging and Monitoring
    "structlog>=23.2.0,<24.0.0",
    "loguru>=0.7.2,<0.8.0",
    "prometheus-client>=0.19.0,<0.20.0",
    "opentelemetry-api>=1.21.0,<1.22.0",
    "opentelemetry-sdk>=1.21.0,<1.22.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0,<0.43b0",
    
    # Security and Authentication
    "cryptography>=41.0.7,<42.0.0",
    "passlib[bcrypt]>=1.7.4,<1.8.0",
    "python-jose[cryptography]>=3.3.0,<3.4.0",
    "python-multipart>=0.0.6,<0.1.0",
    
    # Async and Concurrency
    "asyncio-mqtt>=0.16.1,<0.17.0",
    "aiofiles>=23.2.1,<24.0.0",
    "aiohttp>=3.9.1,<3.10.0",
    "celery[redis]>=5.3.4,<5.4.0",
    
    # Machine Learning and AI
    "torch>=2.1.1,<2.2.0",
    "transformers>=4.36.0,<4.37.0",
    "sentence-transformers>=2.2.2,<2.3.0",
    "networkx>=3.2.1,<3.3.0",
    
    # Configuration and Environment
    "python-dotenv>=1.0.0,<1.1.0",
    "click>=8.1.7,<8.2.0",
    "typer>=0.9.0,<0.10.0",
    "rich>=13.7.0,<14.0.0",
    
    # Development and Testing Support
    "tenacity>=8.2.3,<8.3.0",
    "jinja2>=3.1.2,<3.2.0",
    "python-dateutil>=2.8.2,<2.9.0",
    "pytz>=2023.3",
]

[project.optional-dependencies]
# Development Dependencies
dev = [
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<0.22.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "pytest-xdist>=3.5.0,<4.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    "coverage[toml]>=7.3.2,<8.0.0",
    "pre-commit>=3.6.0,<4.0.0",
    "black>=23.11.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.7.1,<1.8.0",
    "bandit>=1.7.5,<1.8.0",
    "safety>=2.3.5,<3.0.0",
]

# Production Dependencies
prod = [
    "psycopg2-binary>=2.9.9,<3.0.0",
    "newrelic>=9.2.0,<10.0.0",
    "sentry-sdk[fastapi]>=1.38.0,<1.39.0",
    "elastic-apm>=6.20.0,<7.0.0",
]

# Documentation Dependencies
docs = [
    "mkdocs>=1.5.3,<1.6.0",
    "mkdocs-material>=9.4.8,<9.5.0",
    "mkdocstrings[python]>=0.24.0,<0.25.0",
    "mkdocs-gen-files>=0.5.0,<0.6.0",
    "mkdocs-literate-nav>=0.6.1,<0.7.0",
    "mkdocs-section-index>=0.3.8,<0.4.0",
]

# Machine Learning Extended Dependencies
ml = [
    "tensorflow>=2.15.0,<2.16.0",
    "keras>=2.15.0,<2.16.0",
    "xgboost>=2.0.2,<2.1.0",
    "lightgbm>=4.1.0,<4.2.0",
    "optuna>=3.4.0,<3.5.0",
    "mlflow>=2.8.1,<2.9.0",
]

# Distributed Computing Dependencies
distributed = [
    "ray[default]>=2.8.1,<2.9.0",
    "dask[complete]>=2023.11.0,<2024.1.0",
    "apache-airflow>=2.7.3,<2.8.0",
]

# All optional dependencies
all = [
    "ymera-enterprise[dev,prod,docs,ml,distributed]"
]

[project.urls]
Homepage = "https://github.com/ymera-enterprise/platform"
Documentation = "https://docs.ymera.enterprise"
Repository = "https://github.com/ymera-enterprise/platform.git"
Issues = "https://github.com/ymera-enterprise/platform/issues"
Changelog = "https://github.com/ymera-enterprise/platform/blob/main/CHANGELOG.md"

[project.scripts]
ymera = "ymera_agents.cli:main"
ymera-server = "main:start_server"
ymera-worker = "ymera_agents.worker:main"
ymera-migrate = "ymera_agents.database.migrations:run_migrations"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["ymera_agents*", "config*", "database*", "monitoring*", "security*", "utils*"]
exclude = ["tests*", "docs*", "scripts*", "*.egg-info*"]

[tool.setuptools.package-data]
ymera_agents = [
    "templates/*.html",
    "static/**/*",
    "schemas/*.json",
    "config/*.yaml",
    "migrations/*.sql",
]

# ===============================================================================
# DEVELOPMENT TOOLS CONFIGURATION
# ===============================================================================

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=ymera_agents",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=90",
    "--asyncio-mode=auto",
    "--tb=short",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Test"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselected with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
    "security: marks tests as security tests",
    "smoke: marks tests as smoke tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["ymera_agents"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
target-version = ["py311", "py312"]
line-length = 88
skip-string-normalization = false
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ymera_agents", "config", "database", "monitoring", "security", "utils"]
known_third_party = ["fastapi", "sqlalchemy", "pydantic", "redis", "structlog"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["migrations/*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
namespace_packages = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "celery.*",
    "prometheus_client.*",
    "structlog.*",
    "sentence_transformers.*",
    "transformers.*",
    "torch.*",
    "sklearn.*",
    "networkx.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "docs", "scripts"]
skips = ["B101", "B601", "B602"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503", "F401"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".env",
    "migrations",
]
per-file-ignores = [
    "__init__.py:F401",
    "settings.py:F401",
]

# ===============================================================================
# BUILD AND PACKAGING CONFIGURATION
# ===============================================================================

[tool.setuptools_scm]
write_to = "ymera_agents/_version.py"
write_to_template = '''
"""Version information for YMERA Enterprise Platform."""
__version__ = "{version}"
__version_tuple__ = {version_tuple}
'''

[tool.wheel]
universal = false

# ===============================================================================
# ENVIRONMENT SPECIFIC CONFIGURATIONS
# ===============================================================================

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.ruff.mccabe]
max-complexity = 10

# ===============================================================================
# PERFORMANCE AND MONITORING
# ===============================================================================

[tool.py-spy]
duration = 60
rate = 100
format = "flamegraph"
output = "profile.svg"

# ===============================================================================
# DEPLOYMENT CONFIGURATION
# ===============================================================================

[tool.docker]
base-image = "python:3.11-slim"
port = 8000
healthcheck-interval = 30
healthcheck-timeout = 10
healthcheck-retries = 3

[tool.kubernetes]
namespace = "ymera-production"
replicas = 3
cpu-request = "500m"
cpu-limit = "2000m"
memory-request = "1Gi"
memory-limit = "4Gi"

# ===============================================================================
# QUALITY GATES AND AUTOMATION
# ===============================================================================

[tool.pre-commit]
repos = [
    {repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.5.0"},
    {repo = "https://github.com/astral-sh/ruff-pre-commit", rev = "v0.1.6"},
    {repo = "https://github.com/psf/black", rev = "23.11.0"},
    {repo = "https://github.com/pycqa/isort", rev = "5.12.0"},
    {repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v1.7.1"},
    {repo = "https://github.com/PyCQA/bandit", rev = "1.7.5"},
]